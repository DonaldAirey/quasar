namespace MarkThree.Guardian
{

	using System;

	/// <summary>
	/// OrderType Types
	/// </summary>
	public class OrderType
	{

		/// <summary>Buy</summary>
		public const int Buy = 0;
		/// <summary>Sell</summary>
		public const int Sell = 1;
		/// <summary>Buy Cover</summary>
		public const int BuyCover = 2;
		/// <summary>Sell Short</summary>
		public const int SellShort = 3;

		/// <summary>
		/// Returns the type of position generated by the given transaction.
		/// </summary>
		/// <param name="orderType">The transaction.</param>
		/// <returns>The type of position generated from the transaction.</returns>
		public static int GetPosition(int orderType)
		{

			// These orderType generate long position.
			switch (orderType)
			{

			case Buy:
			case Sell:

				return PositionType.Long;

			}

			// All other orderType generate short position.
			return PositionType.Short;

		}

		/// <summary>
		/// Gets the impact that the given orderType would have on the cash holdings.
		/// </summary>
		/// <param name="orderType">The orderType in question.</param>
		/// <returns>1.0 if the orderType would add to the cash holdings, -1.0 if it would remove cash.</returns>
		public static decimal GetCashSign(int orderType)
		{

			// These orderType will add to cash.  All others will reduce cash.
			return (orderType == OrderType.Sell || orderType == OrderType.BuyCover) ? 1.0M : -1.0M;

		}

	};

}
